geom_smooth(se = FALSE, color = 'black') +
facet_wrap(~year) +
labs(x = 'Renda per capita', y = 'Expectativa de vida', title = 'Economia x saúde do longo dos anos', color = 'Continente', subtitle = 'Relação entre renda per capita e expectativa de vida no mundo') +
scale_x_log10(labels = scales::dollar) +
theme_clean() +
theme(axis.text.x = element_text(size = 8)) +
scale_color_brewer(palette = 'Set1')
library(gapminder)
library(ggrepel)
library(ggthemes)
library(RColorBrewer)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent), alpha = 0.5) +
geom_smooth(se = FALSE, color = 'black') +
facet_wrap(~year) +
labs(x = 'Renda per capita', y = 'Expectativa de vida', title = 'Economia x saúde do longo dos anos', color = 'Continente', subtitle = 'Relação entre renda per capita e expectativa de vida no mundo') +
scale_x_log10(labels = scales::dollar) +
theme_clean() +
theme(axis.text.x = element_text(size = 7)) +
scale_color_brewer(palette = 'Set1')
ggplot(subset(gapminder, continent == "Africa"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'red', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na África", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 3)
ggplot(subset(gapminder, continent == "Americas"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'blue', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde nas Américas", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 3)
ggplot(subset(gapminder, continent == "Asia"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'green', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Ásia", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 3)
ggplot(subset(gapminder, continent == "Europe"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'purple', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Europa", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 3)
ggplot(subset(gapminder, continent == "Oceania"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'orange', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Oceania", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 3)
ggplot(subset(gapminder, continent == "Africa"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'red', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na África", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2.5)
ggplot(subset(gapminder, continent == "Americas"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'blue', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde nas Américas", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2.5)
ggplot(subset(gapminder, continent == "Asia"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'green', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Ásia", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2.5)
ggplot(subset(gapminder, continent == "Europe"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'purple', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Europa", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2.5)
ggplot(subset(gapminder, continent == "Oceania"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'orange', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Oceania", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2.5)
ggplot(subset(gapminder, continent == "Africa"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'red', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na África", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2)
ggplot(subset(gapminder, continent == "Americas"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'blue', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde nas Américas", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2)
ggplot(subset(gapminder, continent == "Asia"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'green', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Ásia", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2)
ggplot(subset(gapminder, continent == "Europe"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'purple', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Europa", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2)
ggplot(subset(gapminder, continent == "Oceania"), aes(x = gdpPercap, y = lifeExp, label = country)) +
geom_point(aes(size = pop), color = 'orange', alpha = 0.5) +
facet_wrap(~year) +
theme_clean() +
labs(x = "Renda per capita", y = "Expectativa de vida", title = "Economia x saúde na Oceania", subtitle = "Renda per capita x expectativa de vida ao longo dos anos", size = "População") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
scale_x_log10(labels = scales::dollar) +
scale_size(labels = scales::number) +
geom_text_repel(size = 2)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
library(gapminder)
library(ggrepel)
library(ggthemes)
library(RColorBrewer)
ggplot(gapminder, aes(x = gdpPercap, y = lifeExp)) +
geom_point(aes(color = continent), alpha = 0.5) +
geom_smooth(color = 'black') +
facet_wrap(~year) +
labs(x = 'Renda per capita', y = 'Expectativa de vida', title = 'Economia x saúde do longo dos anos', color = 'Continente', subtitle = 'Relação entre renda per capita e expectativa de vida no mundo') +
scale_x_log10(labels = scales::dollar) +
theme_clean() +
theme(axis.text.x = element_text(size = 7)) +
scale_color_brewer(palette = 'Set1')
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggrepel)
library(gridExtra)
library(pander)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
setwd("/PATH/TO/YOUR/FOLDER")
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
getwd()
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggrepel)
library(gridExtra)
library(pander)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
tropas %>% head() %>% pandoc.table()
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round") +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3) +
scale_linewidth(range = c(0.5, 15)) +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
guides(color = F, linewidth = F) +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line() +
geom_label(aes(label = rotulos), size = 3) +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7)) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggrepel)
library(gridExtra)
library(pander)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
# tropas %>% head() %>% pandoc.table()
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round") +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3) +
scale_linewidth(range = c(0.5, 15)) +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
guides(color = F, linewidth = F) +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line() +
geom_label(aes(label = rotulos), size = 3) +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7)) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggrepel)
library(gridExtra)
library(pander)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
# tropas %>% head() %>% pandoc.table()
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round") +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3) +
scale_linewidth(range = c(0.5, 15)) +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
guides(color = F, linewidth = F) +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line() +
geom_label(aes(label = rotulos), size = 3) +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7)) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggmap)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round") +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3) +
scale_linewidth(range = c(0.5, 15)) +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
guides(color = F, linewidth = F) +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line() +
geom_label(aes(label = rotulos), size = 3) +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7)) +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
View(tropas)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round")
graf_tropas
graf_tropas = graf_tropas +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3)
graf_tropas = graf_tropas +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3)
graf_tropas
graf_tropas = graf_tropas +
scale_linewidth(range = c(0.5, 15)) +
guides(color = F, linewidth = F)
graf_tropas
graf_tropas = graf_tropas +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
graf_tropas
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round")
graf_tropas
graf_tropas = graf_tropas +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3)
graf_tropas
graf_tropas = graf_tropas +
scale_linewidth(range = c(0.5, 15)) +
guides(color = F, linewidth = F)
graf_tropas
graf_tropas = graf_tropas +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
graf_tropas
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line()
graf_temperaturas
graf_temperaturas = graf_temperaturas +
geom_label(aes(label = rotulos), size = 3)
graf_temperaturas
graf_temperaturas = graf_temperaturas +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7))
graf_temperaturas
graf_temperaturas = graf_temperaturas +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
graf_temperaturas
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.draw(ambos)
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
setwd(dirname(rstudioapi::getSourceEditorContext()$path))
library(tidyverse)
library(lubridate)
library(ggrepel)
library(gridExtra)
library(RColorBrewer)
library(ggthemes)
cidades = read.table("Minard/cities.txt", header = T, stringsAsFactors = F)
tropas = read.table("Minard/troops.txt", header = T, stringsAsFactors = F)
temperaturas = read.table("Minard/temps.txt", header = T, stringsAsFactors = F) %>%
mutate(dmy(date))
graf_tropas = ggplot() +
geom_path(data = tropas, aes(x = long, y = lat, group = group, color = direction, linewidth = survivors), lineend = "round")
graf_tropas
graf_tropas = graf_tropas +
geom_point(data = cidades, aes(x = long, y = lat)) +
geom_text_repel(data = cidades, aes(x = long, y = lat, label = city), size = 3)
graf_tropas
graf_tropas = graf_tropas +
scale_linewidth(range = c(0.5, 15)) +
guides(color = F, linewidth = F)
graf_tropas
graf_tropas = graf_tropas +
scale_color_brewer(palette = "Pastel1") +
theme_light() +
labs(x = NULL, y = "Latitude (º)", title = "A Trama de Minard de 1812") +
theme(plot.title = element_text(hjust = 0.5, size = 25), axis.text.x = element_blank(), axis.ticks.x = element_blank())
graf_tropas
temperaturas_ajustadas = temperaturas %>% mutate(rotulos = paste0(temp, "º , ", month, ". ", day))
graf_temperaturas = ggplot(temperaturas_ajustadas, aes(x = long, y = temp)) +
geom_line()
graf_temperaturas
graf_temperaturas = graf_temperaturas +
geom_label(aes(label = rotulos), size = 3)
graf_temperaturas
graf_temperaturas = graf_temperaturas +
scale_x_continuous() +
scale_y_continuous(position = "left") +
coord_cartesian(ylim = c(-35, 5), xlim = c(23.95, 37.7))
graf_temperaturas
graf_temperaturas = graf_temperaturas +
labs(x = "Longitude (º)", y = "Temperatura na recuada (ºC)") +
theme(panel.grid.major.x = element_blank(),
panel.grid.minor.x = element_blank(),
panel.grid.minor.y = element_blank(),
axis.text.x = element_blank(),
axis.ticks = element_blank(),
panel.border = element_blank()) +
theme_light()
graf_temperaturas
ambos = rbind(ggplotGrob(graf_tropas), ggplotGrob(graf_temperaturas))
grid::grid.newpage()
grid::grid.draw(ambos)
install.packages("ggplot2")
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
install.packages("gapminder", repos = "http://cran.us.r-project.org")
if(!require(ggplot2)) install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library(gapminder)
library(ggplot2)
if(!require(gapminder)) install.packages("gapminder", repos = "http://cran.us.r-project.org")
if(!require(ggplot2)) install.packages("ggplot2", repos = "http://cran.us.r-project.org")
library(gapminder)
library(ggplot2)
install.packages("gapminder")
install.packages("gapminder")
install.packages("ggplot2")
